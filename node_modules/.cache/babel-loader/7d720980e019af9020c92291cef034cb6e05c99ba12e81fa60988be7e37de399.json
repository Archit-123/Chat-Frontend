{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programs\\\\2025 programs\\\\webchatai\\\\websocket\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\", {\n  autoConnect: false\n}); // Prevent auto connection\n\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    if (!username) {\n      const name = prompt(\"Enter your name:\");\n      if (name) {\n        setUsername(name);\n        socket.connect(); // Connect socket only after username is set\n      }\n    }\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server:\", socket.id);\n    });\n    socket.on(\"receive_message\", data => {\n      setMessages(prev => [...prev, data]);\n    });\n    return () => {\n      socket.off(\"receive_message\"); // Cleanup event listener\n      socket.disconnect(); // Disconnect properly when component unmounts\n    };\n  }, [username]); // Dependency array ensures this runs only when username changes\n\n  const sendMessage = () => {\n    if (message.trim() !== \"\") {\n      socket.emit(\"send_message\", {\n        user: username,\n        message\n      });\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      // style={{\n      //   border: \"1px solid #f31c1c\",\n      //   padding: \"10px\",\n      //   height: \"300px\",\n      //   overflowY: \"scroll\",\n      // }}\n      className: \"message-style\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"8kjCWCz91uO6C8LQQm9TJnbMjGs=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","autoConnect","Chat","_s","message","setMessage","messages","setMessages","username","setUsername","name","prompt","connect","on","console","log","id","data","prev","off","disconnect","sendMessage","trim","emit","user","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/Programs/2025 programs/webchatai/websocket/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Chat.css\";\r\n\r\nconst socket = io(\"http://localhost:5000\", { autoConnect: false }); // Prevent auto connection\r\n\r\nconst Chat = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      const name = prompt(\"Enter your name:\");\r\n      if (name) {\r\n        setUsername(name);\r\n        socket.connect(); // Connect socket only after username is set\r\n      }\r\n    }\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"Connected to server:\", socket.id);\r\n    });\r\n\r\n    socket.on(\"receive_message\", (data) => {\r\n      setMessages((prev) => [...prev, data]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\"); // Cleanup event listener\r\n      socket.disconnect(); // Disconnect properly when component unmounts\r\n    };\r\n  }, [username]); // Dependency array ensures this runs only when username changes\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim() !== \"\") {\r\n      socket.emit(\"send_message\", { user: username, message });\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>AI Chat App</h2>\r\n      <div\r\n        // style={{\r\n        //   border: \"1px solid #f31c1c\",\r\n        //   padding: \"10px\",\r\n        //   height: \"300px\",\r\n        //   overflowY: \"scroll\",\r\n        // }}\r\n        className=\"message-style\"\r\n      >\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>\r\n            <strong>{msg.user}:</strong> {msg.message}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}