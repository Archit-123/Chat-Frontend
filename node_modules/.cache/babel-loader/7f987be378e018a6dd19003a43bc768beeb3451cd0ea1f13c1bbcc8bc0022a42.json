{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programs\\\\2025 programs\\\\webchatai\\\\websocket\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport \"./Chat.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:9000\", {\n  autoConnect: false\n});\nexport default function Chat() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Fetch initial data\n    Promise.all([axios.get(\"http://localhost:9000/api/students\"), axios.get(\"http://localhost:9000/api/messages\")]).then(([studentRes, messageRes]) => {\n      setStudents(studentRes.data);\n      setMessages(messageRes.data);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n\n    // Connect to socket only once\n    socket.connect();\n\n    // Listen for new messages\n    socket.on(\"receiveMessage\", newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    return () => {\n      socket.disconnect(); // Cleanup on unmount\n    };\n  }, []);\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!message.trim()) return;\n\n    // Emit message via Socket.IO only (no need for axios POST)\n    socket.emit(\"sendMessage\", message);\n    setMessage(\"\"); // Clear input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msgBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleMessageChange,\n        type: \"text\",\n        placeholder: \"Enter your message\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"akWbOT/yVjuIeKBY8pq5GKTxJzs=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","jsxDEV","_jsxDEV","socket","autoConnect","Chat","_s","students","setStudents","message","setMessage","messages","setMessages","Promise","all","get","then","studentRes","messageRes","data","catch","error","console","connect","on","newMessage","prevMessages","disconnect","handleMessageChange","event","target","value","handleSubmit","preventDefault","trim","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","onChange","type","placeholder","_c","$RefreshReg$"],"sources":["E:/Programs/2025 programs/webchatai/websocket/src/Chat.js"],"sourcesContent":["import \"./Chat.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:9000\", { autoConnect: false });\r\n\r\nexport default function Chat() {\r\n  const [students, setStudents] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch initial data\r\n    Promise.all([\r\n      axios.get(\"http://localhost:9000/api/students\"),\r\n      axios.get(\"http://localhost:9000/api/messages\"),\r\n    ])\r\n      .then(([studentRes, messageRes]) => {\r\n        setStudents(studentRes.data);\r\n        setMessages(messageRes.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n\r\n    // Connect to socket only once\r\n    socket.connect();\r\n\r\n    // Listen for new messages\r\n    socket.on(\"receiveMessage\", (newMessage) => {\r\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect(); // Cleanup on unmount\r\n    };\r\n  }, []);\r\n\r\n  const handleMessageChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!message.trim()) return;\r\n\r\n    // Emit message via Socket.IO only (no need for axios POST)\r\n    socket.emit(\"sendMessage\", message);\r\n\r\n    setMessage(\"\"); // Clear input field\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"msgBody\">\r\n        <h3>Chat Messages:</h3>\r\n        <ul>\r\n          {messages.map((msg, index) => (\r\n            <li key={index}>{msg}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          onChange={handleMessageChange}\r\n          type=\"text\"\r\n          placeholder=\"Enter your message\"\r\n          value={message}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}